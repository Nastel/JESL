;Default tracking configuration for all sources (source: *), 
;used only if no other stanza matches.
{
	source: *
	source.factory: com.nastel.jkool.tnt4j.source.SourceFactoryImpl
	source.factory.GEOADDR: New York
	source.factory.DATACENTER: HQDC
	source.factory.RootFQN: RUNTIME=?#SERVER=?#NETADDR=?#DATACENTER=?#GEOADDR=?	
	source.factory.RootSSN: tnt4j-stream

	tracker.factory: com.nastel.jkool.tnt4j.tracker.DefaultTrackerFactory
	dump.sink.factory: com.nastel.jkool.tnt4j.dump.DefaultDumpSinkFactory
	event.sink.factory: com.nastel.jkool.tnt4j.logger.slf4j.SLF4JEventSinkFactory
	event.formatter: com.nastel.jkool.tnt4j.format.SimpleFormatter
	tracking.selector: com.nastel.jkool.tnt4j.selector.DefaultTrackingSelector
	tracking.selector.Repository: com.nastel.jkool.tnt4j.repository.FileTokenRepository
}

; Configuration for TrackingLogger 
{
	source: com.nastel.jkool.tnt4j.TrackingLogger
	source.factory: com.nastel.jkool.tnt4j.source.SourceFactoryImpl
	source.factory.RootSSN: tnt4j-tracker
	
	default.event.sink.factory: com.nastel.jkool.tnt4j.logger.slf4j.SLF4JEventSinkFactory
	tracker.factory: com.nastel.jkool.tnt4j.tracker.DefaultTrackerFactory
	dump.sink.factory: com.nastel.jkool.tnt4j.dump.DefaultDumpSinkFactory
	event.sink.factory: com.nastel.jkool.tnt4j.logger.slf4j.SLF4JEventSinkFactory
	event.formatter: com.nastel.jkool.tnt4j.format.SimpleFormatter
	tracking.selector: com.nastel.jkool.tnt4j.selector.DefaultTrackingSelector
	tracking.selector.Repository: com.nastel.jkool.tnt4j.repository.FileTokenRepository
}

;Stanza used for application source with jKool Cloud integration
{
	source: com.myco.mypackage
	source.factory: com.nastel.jkool.tnt4j.source.SourceFactoryImpl
	source.factory.GEOADDR: New York
	source.factory.DATACENTER: HQDC
	source.factory.RootFQN: SERVER=?#DATACENTER=?#GEOADDR=?	
	source.factory.RootSSN: user-stream
	
	tracker.factory: com.nastel.jkool.tnt4j.tracker.DefaultTrackerFactory
	dump.sink.factory: com.nastel.jkool.tnt4j.dump.DefaultDumpSinkFactory

	; event sink configuration: destination and data format
	event.sink.factory: com.nastel.jkool.tnt4j.sink.BufferedEventSinkFactory

	; Throttle control MPS (messages/sec) BPS (bytes/sec)
	event.sink.factory.RateMaxMPS: 50
	event.sink.factory.RateMaxBPS: 50000
	event.sink.factory.RateLimit: true
	; < 0 BLOCK_UNTIL_GRANTED, 0 NO_BLOCK, > 0 BLOCK_UNTIL_TIMEOUT in milliseconds
	event.sink.factory.RateTimeout: -1

	event.sink.factory.EventSinkFactory: com.jkool.jesl.tnt4j.sink.JKCloudEventSinkFactory
	event.sink.factory.EventSinkFactory.Url: http://data.jkoolcloud.com:6580
	event.sink.factory.EventSinkFactory.Token: YOUR-ACCESS-TOKEN
	event.formatter: com.nastel.jkool.tnt4j.format.JSONFormatter

	; Configure default sink filter based on level and time (elapsed/wait)
	event.sink.factory.Filter: com.nastel.jkool.tnt4j.filters.EventLevelTimeFilter
	event.sink.factory.Filter.Level: TRACE
	; Uncomment lines below to filter out events based on elapsed time and wait time
	; Timed event/activities greater or equal to given values will be logged
	;event.sink.factory.Filter.ElapsedUsec: 100
	;event.sink.factory.Filter.WaitUsec: 100
	
	tracking.selector: com.nastel.jkool.tnt4j.selector.DefaultTrackingSelector
	tracking.selector.Repository: com.nastel.jkool.tnt4j.repository.FileTokenRepository
}

;Stanza used Syslog server -> jKoolCloud integration
{
	source: com.jkool.jesl.net.syslogd
	source.factory: com.nastel.jkool.tnt4j.source.SourceFactoryImpl
	source.factory.GEOADDR: New York
	source.factory.DATACENTER: HQDC
	source.factory.RootFQN: SERVER=?#DATACENTER=?#GEOADDR=?	
	source.factory.RootSSN: syslog-stream
	
	tracker.factory: com.nastel.jkool.tnt4j.tracker.DefaultTrackerFactory
	dump.sink.factory: com.nastel.jkool.tnt4j.dump.DefaultDumpSinkFactory

	; Use below configuration for debugging
	;event.sink.factory: com.nastel.jkool.tnt4j.sink.FileEventSinkFactory
	;event.formatter: com.nastel.jkool.tnt4j.format.JSONFormatter
	;event.formatter.Newline: true

	; event sink configuration: destination and data format
	event.sink.factory: com.nastel.jkool.tnt4j.sink.BufferedEventSinkFactory
	
	; Throttle control MPS (messages/sec) BPS (bytes/sec)
	event.sink.factory.RateMaxMPS: 50
	event.sink.factory.RateMaxBPS: 50000
	event.sink.factory.RateLimit: true
	; < 0 BLOCK_UNTIL_GRANTED, 0 NO_BLOCK, > 0 BLOCK_UNTIL_TIMEOUT in milliseconds
	event.sink.factory.RateTimeout: -1

	; Logging Pool Configuration for BufferedEventSinkFactory
	event.sink.factory.PoolName: syslogPool
	event.sink.factory.PoolCapacity: 20000
	event.sink.factory.PoolSize: 4

	event.sink.factory.EventSinkFactory: com.jkool.jesl.tnt4j.sink.JKCloudEventSinkFactory
	;event.sink.factory.EventSinkFactory.Filename: jkoocloud.json
	event.sink.factory.EventSinkFactory.Url: http://data.jkoolcloud.com:6580
	event.sink.factory.EventSinkFactory.Token: ACCESS-TOKEN
	event.formatter: com.nastel.jkool.tnt4j.format.JSONFormatter

	; Configure default sink filter based on level and time (elapsed/wait)
	event.sink.factory.Filter: com.nastel.jkool.tnt4j.filters.EventLevelTimeFilter
	event.sink.factory.Filter.Level: TRACE
	; Uncomment lines below to filter out events based on elapsed time and wait time
	; Timed event/activities greater or equal to given values will be logged
	;event.sink.factory.Filter.ElapsedUsec: 100
	;event.sink.factory.Filter.WaitUsec: 100
	
	tracking.selector: com.nastel.jkool.tnt4j.selector.DefaultTrackingSelector
	tracking.selector.Repository: com.nastel.jkool.tnt4j.repository.FileTokenRepository
}
