#
# Copyright 2014-2023 JKOOL, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

; TNT4J Common Definitions
{
	source: common.base
	import: tnt4j-common.properties
}

; TNT4J Common jKool Definitions
{
	source: common.jkool
	import: tnt4j-jkool.properties
}

; Example of logging configuration using multiple cloud event sinks via sink definitions
; specified in 'jkoolcloud.sinks' stanza.
{
	source: com.myappl.name
	like: default.logger,jkoolcloud.sinks

	activity.listener: com.jkoolcloud.tnt4j.tracker.DefaultActivityListener
}

;Stanza used for application source with jKoolCloud integration
{
	source: com.myco.mypackage
	like: default.logger
	source.factory.RootSSN: user-stream

	; event sink configuration: destination and data format
	event.sink.factory: com.jkoolcloud.tnt4j.sink.impl.BufferedEventSinkFactory
	event.sink.factory.PooledLoggerFactory: com.jkoolcloud.tnt4j.sink.impl.PooledLoggerFactoryImpl

	; Throttle control MPS (messages/sec) BPS (bytes/sec)
	event.sink.factory.RateMaxMPS: 50
	event.sink.factory.RateMaxBPS: 50000
	event.sink.factory.RateLimit: true
	; < 0 BLOCK_UNTIL_GRANTED, 0 NO_BLOCK, > 0 BLOCK_UNTIL_TIMEOUT in milliseconds
	event.sink.factory.RateTimeout: -1

	event.sink.factory.EventSinkFactory: com.jkoolcloud.jesl.tnt4j.sink.JKCloudEventSinkFactory
	event.sink.factory.EventSinkFactory.Url: https://stream.meshiq.com
	event.sink.factory.EventSinkFactory.Token: YOUR-ACCESS-TOKEN
	event.formatter: com.jkoolcloud.tnt4j.format.JSONFormatter
	; Configures special numeric values handling. Can be one of: SUPPRESS, ENQUOTE, MAINTAIN. Default value: SUPPRESS
	#event.formatter.SpecNumbersHandling: MAINTAIN

	; Sink errors logging listener
	event.sink.factory.EventSinkFactory.ErrorListener:com.jkoolcloud.tnt4j.sink.ErrorLoggingListener

	; Configure default sink filter based on level and time (elapsed/wait)
	event.sink.factory.Filter: com.jkoolcloud.tnt4j.filters.EventLevelTimeFilter
	event.sink.factory.Filter.Level: TRACE
	; Uncomment lines below to filter out events based on elapsed time and wait time
	; Timed event/activities greater or equal to given values will be logged
	;event.sink.factory.Filter.ElapsedUsec: 100
	;event.sink.factory.Filter.WaitUsec: 100
}

;Stanza used for samples
{
	source: com.jkoolcloud.tnt4j.samples
	like: default.logger
	source.factory.RootSSN: tnt4j-filemon

	; Use below configuration for debugging
	;event.sink.factory: com.jkoolcloud.tnt4j.sink.impl.FileEventSinkFactory
	;event.formatter: com.jkoolcloud.tnt4j.format.JSONFormatter
	;event.formatter.Newline: true

	; event sink configuration: destination and data format
	event.sink.factory: com.jkoolcloud.tnt4j.sink.impl.BufferedEventSinkFactory
	event.sink.factory.PooledLoggerFactory: com.jkoolcloud.tnt4j.sink.impl.PooledLoggerFactoryImpl

	; Throttle control MPS (messages/sec) BPS (bytes/sec)
	event.sink.factory.RateMaxMPS: 50
	event.sink.factory.RateMaxBPS: 50000
	event.sink.factory.RateLimit: true
	; < 0 BLOCK_UNTIL_GRANTED, 0 NO_BLOCK, > 0 BLOCK_UNTIL_TIMEOUT in milliseconds
	event.sink.factory.RateTimeout: -1

	; Logging Pool Configuration for BufferedEventSinkFactory
	event.sink.factory.PoolName: samplesPool
	event.sink.factory.PoolCapacity: 20000
	event.sink.factory.PoolSize: 4

	event.sink.factory.EventSinkFactory: com.jkoolcloud.jesl.tnt4j.sink.JKCloudEventSinkFactory
	;event.sink.factory.EventSinkFactory.LogSink: file:./jkoolcloud.json
	event.sink.factory.EventSinkFactory.Url: https://stream.meshiq.com
	event.sink.factory.EventSinkFactory.Token: ACCESS-TOKEN
	event.formatter: com.jkoolcloud.tnt4j.format.JSONFormatter
	; Configures special numeric values handling. Can be one of: SUPPRESS, ENQUOTE, MAINTAIN. Default value: SUPPRESS
	#event.formatter.SpecNumbersHandling: MAINTAIN

	; Sink errors logging listener
	event.sink.factory.EventSinkFactory.ErrorListener:com.jkoolcloud.tnt4j.sink.ErrorLoggingListener

	; Configure default sink filter based on level and time (elapsed/wait)
	event.sink.factory.Filter: com.jkoolcloud.tnt4j.filters.EventLevelTimeFilter
	event.sink.factory.Filter.Level: TRACE
	; Uncomment lines below to filter out events based on elapsed time and wait time
	; Timed event/activities greater or equal to given values will be logged
	;event.sink.factory.Filter.ElapsedUsec: 100
	;event.sink.factory.Filter.WaitUsec: 100
}
